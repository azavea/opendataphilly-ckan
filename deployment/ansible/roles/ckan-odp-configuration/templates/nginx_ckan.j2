proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=cache:30m max_size=250m;
proxy_temp_path /tmp/nginx_proxy 1 2;

map $http_user_agent $limit_bots {
    default 0;
    ~*(semrush|mj12bot|ahrefs|webmeup) 1;
}

server {
    listen 80;
    return 301 {{ ckan_site_url }}$request_uri;
}

server {
    listen 443 ssl;
    {% if letsencrypt_domains is defined %}
    ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/privkey.pem;
    {% else %}
    ssl_certificate /etc/ssl/certs/{{ ckan_ssl_cert | default('ssl-cert-snakeoil.pem') }};
    ssl_certificate_key /etc/ssl/private/{{ ckan_ssl_key | default('ssl-cert-snakeoil.key') }};
    {% endif %}
    client_max_body_size 100M;
    location / {
        if ($limit_bots = 1) {
            return 403;
        }
        proxy_pass http://127.0.0.1:8080/;
        proxy_set_header Host $host;
        proxy_cache cache;
        proxy_cache_bypass $cookie_auth_tkt;
        proxy_no_cache $cookie_auth_tkt;
        proxy_cache_valid 30m;
        proxy_cache_key $host$scheme$proxy_host$request_uri;
        proxy_set_header X-Forwarded-Proto $scheme;
        # In emergency comment out line to force caching
        # proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
    }
    location = / {
        proxy_pass http://127.0.0.1:8080/;
        proxy_set_header Host $host;
        proxy_cache cache;
        proxy_cache_bypass $cookie_auth_tkt;
        proxy_no_cache $cookie_auth_tkt;
        proxy_cache_valid 30m;
        proxy_cache_key $host$scheme$proxy_host$request_uri;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_ignore_headers Cache-Control;
        add_header X-Proxy-Cache $upstream_cache_status;
    }
}
